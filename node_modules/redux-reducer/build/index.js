'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

exports.action = action;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _underscore = require('underscore');

var _underscore2 = _interopRequireDefault(_underscore);

var _esprima = require('esprima');

var _esprima2 = _interopRequireDefault(_esprima);

var _seamlessImmutable = require('seamless-immutable');

var _seamlessImmutable2 = _interopRequireDefault(_seamlessImmutable);

var ReduxReducer = (function () {
  function ReduxReducer() {
    _classCallCheck(this, ReduxReducer);

    this.reducer = _underscore2['default'].bind(this.reducer, this);
  }

  _createClass(ReduxReducer, [{
    key: 'reducer',
    value: function reducer(state, action) {
      state = (0, _seamlessImmutable2['default'])(_underscore2['default'].defaults({}, state || {}, this.defaults));
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = this._actions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var actionFn = _step.value;

          if (action.type === actionFn.name) {
            state = this.beforeAction(state);
            var result = this[action.type].apply(this, this._createParams(state, actionFn, action));
            return (0, _seamlessImmutable2['default'])(this.afterAction(_underscore2['default'].extend({}, state, result)));
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator['return']) {
            _iterator['return']();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }

      return state;
    }
  }, {
    key: 'beforeAction',
    value: function beforeAction(state) {
      return state;
    }
  }, {
    key: 'afterAction',
    value: function afterAction(state) {
      return state;
    }
  }, {
    key: '_createParams',
    value: function _createParams(state, actionFn, actionObj) {
      var params = [state];
      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = actionFn.params[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var param = _step2.value;

          params.push(actionObj[param]);
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2['return']) {
            _iterator2['return']();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }

      return params;
    }
  }]);

  return ReduxReducer;
})();

exports.ReduxReducer = ReduxReducer;

function action(target, name, descriptor) {
  if (!target._actions) {
    target._actions = [];
  }
  var functionDeclaration = _esprima2['default'].parse(descriptor.value.toString()).body[0];
  var paramNames = _underscore2['default'].pluck(functionDeclaration.params, 'name');
  var otherArgs = paramNames.slice(1);
  target._actions.push({ name: name, params: otherArgs });
  target.constructor[name] = function () {
    if (arguments.length !== otherArgs.length) {
      throw "Incorrect number of arguments";
    }
    var action = { type: name };
    for (var i = 0; i < otherArgs.length; i++) {
      action[otherArgs[i]] = arguments[i];
    }
    return action;
  };
}
//# sourceMappingURL=data:application/json;base64,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QyxDQUFDO0FBQzVCLFNBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFDO0FBQ3ZDLFlBQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDckM7QUFDRCxXQUFPLE1BQU0sQ0FBQztHQUNmLENBQUM7Q0FDSCIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ3VuZGVyc2NvcmUnO1xyXG5pbXBvcnQgZXNwcmltYSBmcm9tICdlc3ByaW1hJztcclxuaW1wb3J0IEltbXV0YWJsZSBmcm9tICdzZWFtbGVzcy1pbW11dGFibGUnO1xyXG5cclxuZXhwb3J0IGNsYXNzIFJlZHV4UmVkdWNlciB7XHJcbiAgY29uc3RydWN0b3IoKXtcclxuICAgIHRoaXMucmVkdWNlciA9IF8uYmluZCh0aGlzLnJlZHVjZXIsIHRoaXMpO1xyXG4gIH1cclxuXHJcbiAgcmVkdWNlcihzdGF0ZSwgYWN0aW9uKXtcclxuICAgIHN0YXRlID0gSW1tdXRhYmxlKF8uZGVmYXVsdHMoe30sIHN0YXRlIHx8IHt9LCB0aGlzLmRlZmF1bHRzKSk7XHJcbiAgICBmb3IobGV0IGFjdGlvbkZuIG9mIHRoaXMuX2FjdGlvbnMpe1xyXG4gICAgICBpZihhY3Rpb24udHlwZSA9PT0gYWN0aW9uRm4ubmFtZSl7XHJcbiAgICAgICAgc3RhdGUgPSB0aGlzLmJlZm9yZUFjdGlvbihzdGF0ZSk7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpc1thY3Rpb24udHlwZV0uYXBwbHkodGhpcywgdGhpcy5fY3JlYXRlUGFyYW1zKHN0YXRlLCBhY3Rpb25GbiwgYWN0aW9uKSk7XHJcbiAgICAgICAgcmV0dXJuIEltbXV0YWJsZSh0aGlzLmFmdGVyQWN0aW9uKF8uZXh0ZW5kKHt9LCBzdGF0ZSwgcmVzdWx0KSkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gc3RhdGU7XHJcbiAgfVxyXG5cclxuICBiZWZvcmVBY3Rpb24oc3RhdGUpe1xyXG4gICAgcmV0dXJuIHN0YXRlO1xyXG4gIH1cclxuXHJcbiAgYWZ0ZXJBY3Rpb24oc3RhdGUpe1xyXG4gICAgcmV0dXJuIHN0YXRlO1xyXG4gIH1cclxuXHJcbiAgX2NyZWF0ZVBhcmFtcyhzdGF0ZSwgYWN0aW9uRm4sIGFjdGlvbk9iail7XHJcbiAgICBjb25zdCBwYXJhbXMgPSBbc3RhdGVdO1xyXG4gICAgZm9yKGxldCBwYXJhbSBvZiBhY3Rpb25Gbi5wYXJhbXMpe1xyXG4gICAgICBwYXJhbXMucHVzaChhY3Rpb25PYmpbcGFyYW1dKTtcclxuICAgIH1cclxuICAgIHJldHVybiBwYXJhbXM7XHJcbiAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGFjdGlvbih0YXJnZXQsIG5hbWUsIGRlc2NyaXB0b3Ipe1xyXG4gIGlmKCF0YXJnZXQuX2FjdGlvbnMpe1xyXG4gICAgdGFyZ2V0Ll9hY3Rpb25zID0gW107XHJcbiAgfVxyXG4gIGNvbnN0IGZ1bmN0aW9uRGVjbGFyYXRpb24gPSBlc3ByaW1hLnBhcnNlKGRlc2NyaXB0b3IudmFsdWUudG9TdHJpbmcoKSkuYm9keVswXTtcclxuICBjb25zdCBwYXJhbU5hbWVzID0gXy5wbHVjayhmdW5jdGlvbkRlY2xhcmF0aW9uLnBhcmFtcywgJ25hbWUnKTtcclxuICBjb25zdCBvdGhlckFyZ3MgPSBwYXJhbU5hbWVzLnNsaWNlKDEpO1xyXG4gIHRhcmdldC5fYWN0aW9ucy5wdXNoKHtuYW1lLCBwYXJhbXM6IG90aGVyQXJnc30pO1xyXG4gIHRhcmdldC5jb25zdHJ1Y3RvcltuYW1lXSA9IGZ1bmN0aW9uKCl7XHJcbiAgICBpZihhcmd1bWVudHMubGVuZ3RoICE9PSBvdGhlckFyZ3MubGVuZ3RoKXtcclxuICAgICAgdGhyb3cgXCJJbmNvcnJlY3QgbnVtYmVyIG9mIGFyZ3VtZW50c1wiO1xyXG4gICAgfVxyXG4gICAgY29uc3QgYWN0aW9uID0ge3R5cGU6IG5hbWV9O1xyXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IG90aGVyQXJncy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgIGFjdGlvbltvdGhlckFyZ3NbaV1dID0gYXJndW1lbnRzW2ldO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFjdGlvbjtcclxuICB9O1xyXG59XHJcbiJdfQ==